// Autogenerated file; see corresponding .js
// vary on a single element. unpacks x[i] into a C variable 
// called _x, of the correct c native type. then executes 
// your code (stmt). If it's a type that can't be unpacked, 
// the TAG of the type is set in failvar, you can handle it. 

// VARY_EL varies over one element: x[i]. 
#define VARY_EL(x,i,stmt,failvar) ({ \
	if(x->t==0){/*cant vary list*/ failvar=0;}\
	if(x->t==1){/*tag*/\
		tag_t _x=AS_t(x,i);\
		stmt;}\
	if(x->t==2){/*char*/\
		char _x=AS_c(x,i);\
		stmt;}\
	if(x->t==3){/*byte*/\
		int8_t _x=AS_b(x,i);\
		stmt;}\
	if(x->t==4){/*int*/\
		int _x=AS_i(x,i);\
		stmt;}\
	if(x->t==5){/*long*/\
		__int64_t _x=AS_j(x,i);\
		stmt;}\
	if(x->t==6){/*octo*/\
		__int128_t _x=AS_o(x,i);\
		stmt;}\
	if(x->t==7){/*float*/\
		double _x=AS_f(x,i);\
		stmt;}\
	if(x->t==8){/*cant vary dict*/ failvar=8;}\
	if(x->t==9){/*cant vary f1*/ failvar=9;}\
	if(x->t==10){/*cant vary f2*/ failvar=10;}\
	if(x->t==11){/*cant vary proj*/ failvar=11;}\
	if(x->t==12){/*cant vary ctx*/ failvar=12;}\
})
// Autogenerated file; see corresponding .js
// same as above, but doesnt allow floats (think bitwise operations)
#define VARY_EL_NOFLOAT(x,i,stmt,failvar) ({ \
	if(x->t==0){/*cant vary list*/ failvar=0;}\
	if(x->t==1){/*tag*/\
		tag_t _x=AS_t(x,i);\
		stmt;}\
	if(x->t==2){/*char*/\
		char _x=AS_c(x,i);\
		stmt;}\
	if(x->t==3){/*byte*/\
		int8_t _x=AS_b(x,i);\
		stmt;}\
	if(x->t==4){/*int*/\
		int _x=AS_i(x,i);\
		stmt;}\
	if(x->t==5){/*long*/\
		__int64_t _x=AS_j(x,i);\
		stmt;}\
	if(x->t==6){/*octo*/\
		__int128_t _x=AS_o(x,i);\
		stmt;}\
	if(x->t==7){/*cant vary float*/ failvar=7;}\
	if(x->t==8){/*cant vary dict*/ failvar=8;}\
	if(x->t==9){/*cant vary f1*/ failvar=9;}\
	if(x->t==10){/*cant vary f2*/ failvar=10;}\
	if(x->t==11){/*cant vary proj*/ failvar=11;}\
	if(x->t==12){/*cant vary ctx*/ failvar=12;}\
})
#define VARY_EACH(x,stmt,failvar) ({ \
	int _i=0,_xn=x->n,_xt=x->t; /*PF("VE");DUMP(x);*/\
	if(_xt==0){/*cant vary list*/ failvar=0; }\
	if(_xt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1){/*tag*/ \
		tag_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_t(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==2){/*char*/ \
		char _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_c(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==3){/*byte*/ \
		int8_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_b(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==4){/*int*/ \
		int _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_i(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==5){/*long*/ \
		__int64_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_j(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==6){/*octo*/ \
		__int128_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_o(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==7){/*float*/ \
		double _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_f(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
})
#define VARY_EACH_NOFLOAT(x,stmt,failvar) ({ \
	int _i=0,_xn=x->n,_xt=x->t; /*PF("VE");DUMP(x);*/\
	if(_xt==0){/*cant vary list*/ failvar=0; }\
	if(_xt==7){/*cant vary float*/ failvar=7; }\
	if(_xt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1){/*tag*/ \
		tag_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_t(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==2){/*char*/ \
		char _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_c(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==3){/*byte*/ \
		int8_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_b(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==4){/*int*/ \
		int _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_i(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==5){/*long*/ \
		__int64_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_j(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==6){/*octo*/ \
		__int128_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_o(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
})
#define VARY_EACHLIST(x,stmt,failvar) ({ \
	int _i=0,_xn=x->n,_xt=x->t; /*PF("VE");DUMP(x);*/\
	if(_xt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==0){/*list*/ \
		VP _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_l(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==1){/*tag*/ \
		tag_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_t(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==2){/*char*/ \
		char _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_c(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==3){/*byte*/ \
		int8_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_b(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==4){/*int*/ \
		int _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_i(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==5){/*long*/ \
		__int64_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_j(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==6){/*octo*/ \
		__int128_t _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_o(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
	if(_xt==7){/*float*/ \
		double _x,_xtmp=0;\
		while (_i < _xn) { _x=AS_f(x,_i); /* printf("%d {{5}}\n", _i, _x); */ stmt; _i++; }\
	}\
})
#define VARY_EACHBOTH(x,y,stmt,failvar) ({ \
	int _i=0,_j=0,_xn=x->n,_yn=y->n,_xt=x->t,_yt=y->t;\
	if(_xt==8||_yt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9||_yt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10||_yt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11||_yt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12||_yt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1&&_yt==1){/*tag x tag*/ \
		tag_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==2){/*tag x char*/ \
		tag_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==3){/*tag x byte*/ \
		tag_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==4){/*tag x int*/ \
		tag_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==5){/*tag x long*/ \
		tag_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==6){/*tag x octo*/ \
		tag_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==7){/*tag x float*/ \
		tag_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==1){/*char x tag*/ \
		char _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==2){/*char x char*/ \
		char _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==3){/*char x byte*/ \
		char _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==4){/*char x int*/ \
		char _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==5){/*char x long*/ \
		char _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==6){/*char x octo*/ \
		char _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==7){/*char x float*/ \
		char _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==1){/*byte x tag*/ \
		int8_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==2){/*byte x char*/ \
		int8_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==3){/*byte x byte*/ \
		int8_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==4){/*byte x int*/ \
		int8_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==5){/*byte x long*/ \
		int8_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==6){/*byte x octo*/ \
		int8_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==7){/*byte x float*/ \
		int8_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==1){/*int x tag*/ \
		int _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==2){/*int x char*/ \
		int _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==3){/*int x byte*/ \
		int _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==4){/*int x int*/ \
		int _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==5){/*int x long*/ \
		int _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==6){/*int x octo*/ \
		int _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==7){/*int x float*/ \
		int _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==1){/*long x tag*/ \
		__int64_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==2){/*long x char*/ \
		__int64_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==3){/*long x byte*/ \
		__int64_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==4){/*long x int*/ \
		__int64_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==5){/*long x long*/ \
		__int64_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==6){/*long x octo*/ \
		__int64_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==7){/*long x float*/ \
		__int64_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==1){/*octo x tag*/ \
		__int128_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==2){/*octo x char*/ \
		__int128_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==3){/*octo x byte*/ \
		__int128_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==4){/*octo x int*/ \
		__int128_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==5){/*octo x long*/ \
		__int128_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==6){/*octo x octo*/ \
		__int128_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==7){/*octo x float*/ \
		__int128_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==1){/*float x tag*/ \
		double _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==2){/*float x char*/ \
		double _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==3){/*float x byte*/ \
		double _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==4){/*float x int*/ \
		double _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==5){/*float x long*/ \
		double _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==6){/*float x octo*/ \
		double _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==7){/*float x float*/ \
		double _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
})
#define VARY_EACHBOTH_NOFLOAT(x,y,stmt,failvar) ({ \
	int _i=0,_j=0,_xn=x->n,_yn=y->n,_xt=x->t,_yt=y->t;\
	if(_xt==8||_yt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9||_yt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10||_yt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11||_yt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12||_yt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1&&_yt==1){/*tag x tag*/ \
		tag_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==2){/*tag x char*/ \
		tag_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==3){/*tag x byte*/ \
		tag_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==4){/*tag x int*/ \
		tag_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==5){/*tag x long*/ \
		tag_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==6){/*tag x octo*/ \
		tag_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==1){/*char x tag*/ \
		char _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==2){/*char x char*/ \
		char _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==3){/*char x byte*/ \
		char _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==4){/*char x int*/ \
		char _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==5){/*char x long*/ \
		char _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==6){/*char x octo*/ \
		char _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==1){/*byte x tag*/ \
		int8_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==2){/*byte x char*/ \
		int8_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==3){/*byte x byte*/ \
		int8_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==4){/*byte x int*/ \
		int8_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==5){/*byte x long*/ \
		int8_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==6){/*byte x octo*/ \
		int8_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==1){/*int x tag*/ \
		int _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==2){/*int x char*/ \
		int _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==3){/*int x byte*/ \
		int _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==4){/*int x int*/ \
		int _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==5){/*int x long*/ \
		int _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==6){/*int x octo*/ \
		int _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==1){/*long x tag*/ \
		__int64_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==2){/*long x char*/ \
		__int64_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==3){/*long x byte*/ \
		__int64_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==4){/*long x int*/ \
		__int64_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==5){/*long x long*/ \
		__int64_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==6){/*long x octo*/ \
		__int64_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==1){/*octo x tag*/ \
		__int128_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==2){/*octo x char*/ \
		__int128_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==3){/*octo x byte*/ \
		__int128_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==4){/*octo x int*/ \
		__int128_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==5){/*octo x long*/ \
		__int128_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==6){/*octo x octo*/ \
		__int128_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
})
#define VARY_EACHBOTHLIST(x,y,stmt,failvar) ({ \
	int _i=0,_j=0,_xn=x->n,_yn=y->n,_xt=x->t,_yt=y->t;\
	if(_xt==8||_yt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9||_yt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10||_yt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11||_yt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12||_yt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==0&&_yt==1){/*list x tag*/ \
		VP _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==0&&_yt==2){/*list x char*/ \
		VP _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==0&&_yt==3){/*list x byte*/ \
		VP _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==0&&_yt==4){/*list x int*/ \
		VP _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==0&&_yt==5){/*list x long*/ \
		VP _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==0&&_yt==6){/*list x octo*/ \
		VP _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==0&&_yt==7){/*list x float*/ \
		VP _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_l(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==1){/*tag x tag*/ \
		tag_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==2){/*tag x char*/ \
		tag_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==3){/*tag x byte*/ \
		tag_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==4){/*tag x int*/ \
		tag_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==5){/*tag x long*/ \
		tag_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==6){/*tag x octo*/ \
		tag_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==1&&_yt==7){/*tag x float*/ \
		tag_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_t(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==1){/*char x tag*/ \
		char _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==2){/*char x char*/ \
		char _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==3){/*char x byte*/ \
		char _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==4){/*char x int*/ \
		char _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==5){/*char x long*/ \
		char _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==6){/*char x octo*/ \
		char _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==2&&_yt==7){/*char x float*/ \
		char _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_c(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==1){/*byte x tag*/ \
		int8_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==2){/*byte x char*/ \
		int8_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==3){/*byte x byte*/ \
		int8_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==4){/*byte x int*/ \
		int8_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==5){/*byte x long*/ \
		int8_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==6){/*byte x octo*/ \
		int8_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==3&&_yt==7){/*byte x float*/ \
		int8_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_b(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==1){/*int x tag*/ \
		int _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==2){/*int x char*/ \
		int _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==3){/*int x byte*/ \
		int _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==4){/*int x int*/ \
		int _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==5){/*int x long*/ \
		int _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==6){/*int x octo*/ \
		int _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==4&&_yt==7){/*int x float*/ \
		int _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_i(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==1){/*long x tag*/ \
		__int64_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==2){/*long x char*/ \
		__int64_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==3){/*long x byte*/ \
		__int64_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==4){/*long x int*/ \
		__int64_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==5){/*long x long*/ \
		__int64_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==6){/*long x octo*/ \
		__int64_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==5&&_yt==7){/*long x float*/ \
		__int64_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_j(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==1){/*octo x tag*/ \
		__int128_t _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==2){/*octo x char*/ \
		__int128_t _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==3){/*octo x byte*/ \
		__int128_t _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==4){/*octo x int*/ \
		__int128_t _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==5){/*octo x long*/ \
		__int128_t _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==6){/*octo x octo*/ \
		__int128_t _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==6&&_yt==7){/*octo x float*/ \
		__int128_t _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_o(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==1){/*float x tag*/ \
		double _x,_xtmp=0; tag_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_t(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==2){/*float x char*/ \
		double _x,_xtmp=0; char _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_c(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==3){/*float x byte*/ \
		double _x,_xtmp=0; int8_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_b(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==4){/*float x int*/ \
		double _x,_xtmp=0; int _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_i(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==5){/*float x long*/ \
		double _x,_xtmp=0; __int64_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_j(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==6){/*float x octo*/ \
		double _x,_xtmp=0; __int128_t _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_o(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
	if(_xt==7&&_yt==7){/*float x float*/ \
		double _x,_xtmp=0; double _y,_ytmp;\
		while (_i<_xn && _j<_yn) { _x=AS_f(x,_i%_xn); _y=AS_f(y,_j%_yn); stmt; \
		if(!SCALAR(x)) {_i++;}  _j++; }\
	}\
})
#define VARY_EACHLEFT(x,y,stmt,failvar) ({ \
	int _i=0,_j=0,_xn=x->n,_yn=y->n,_xt=x->t,_yt=y->t;\
	if(_xt==0||_yt==0){/*cant vary list*/ failvar=0; }\
	if(_xt==8||_yt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9||_yt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10||_yt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11||_yt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12||_yt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1&&_yt==1){/*tag x tag*/ \
		tag_t _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==1&&_yt==2){/*tag x char*/ \
		tag_t _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==1&&_yt==3){/*tag x byte*/ \
		tag_t _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==1&&_yt==4){/*tag x int*/ \
		tag_t _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==1&&_yt==5){/*tag x long*/ \
		tag_t _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==1&&_yt==6){/*tag x octo*/ \
		tag_t _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==1&&_yt==7){/*tag x float*/ \
		tag_t _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_t(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==1){/*char x tag*/ \
		char _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==2){/*char x char*/ \
		char _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==3){/*char x byte*/ \
		char _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==4){/*char x int*/ \
		char _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==5){/*char x long*/ \
		char _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==6){/*char x octo*/ \
		char _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==2&&_yt==7){/*char x float*/ \
		char _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_c(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==1){/*byte x tag*/ \
		int8_t _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==2){/*byte x char*/ \
		int8_t _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==3){/*byte x byte*/ \
		int8_t _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==4){/*byte x int*/ \
		int8_t _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==5){/*byte x long*/ \
		int8_t _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==6){/*byte x octo*/ \
		int8_t _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==3&&_yt==7){/*byte x float*/ \
		int8_t _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_b(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==1){/*int x tag*/ \
		int _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==2){/*int x char*/ \
		int _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==3){/*int x byte*/ \
		int _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==4){/*int x int*/ \
		int _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==5){/*int x long*/ \
		int _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==6){/*int x octo*/ \
		int _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==4&&_yt==7){/*int x float*/ \
		int _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_i(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==1){/*long x tag*/ \
		__int64_t _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==2){/*long x char*/ \
		__int64_t _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==3){/*long x byte*/ \
		__int64_t _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==4){/*long x int*/ \
		__int64_t _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==5){/*long x long*/ \
		__int64_t _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==6){/*long x octo*/ \
		__int64_t _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==5&&_yt==7){/*long x float*/ \
		__int64_t _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_j(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==1){/*octo x tag*/ \
		__int128_t _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==2){/*octo x char*/ \
		__int128_t _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==3){/*octo x byte*/ \
		__int128_t _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==4){/*octo x int*/ \
		__int128_t _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==5){/*octo x long*/ \
		__int128_t _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==6){/*octo x octo*/ \
		__int128_t _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==6&&_yt==7){/*octo x float*/ \
		__int128_t _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_o(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==1){/*float x tag*/ \
		double _x;tag_t _y; _y=AS_t(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==2){/*float x char*/ \
		double _x;char _y; _y=AS_c(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==3){/*float x byte*/ \
		double _x;int8_t _y; _y=AS_b(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==4){/*float x int*/ \
		double _x;int _y; _y=AS_i(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==5){/*float x long*/ \
		double _x;__int64_t _y; _y=AS_j(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==6){/*float x octo*/ \
		double _x;__int128_t _y; _y=AS_o(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
	if(_xt==7&&_yt==7){/*float x float*/ \
		double _x;double _y; _y=AS_f(y,0);\
		while (_i < _xn) { _x=AS_f(x,_i); stmt; _i++; }\
	}\
})
#define VARY_EACHRIGHT(x,y,stmt,failvar) ({ \
	int _i=0,_j=0,_xn=x->n,_yn=y->n,_xt=x->t,_yt=y->t;\
	if(_xt==0||_yt==0){/*cant vary list*/ failvar=0; }\
	if(_xt==8||_yt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9||_yt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10||_yt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11||_yt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12||_yt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1&&_yt==1){/*tag x tag*/ \
		tag_t _x;tag_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==2){/*tag x char*/ \
		tag_t _x;char _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==3){/*tag x byte*/ \
		tag_t _x;int8_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==4){/*tag x int*/ \
		tag_t _x;int _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==5){/*tag x long*/ \
		tag_t _x;__int64_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==6){/*tag x octo*/ \
		tag_t _x;__int128_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==7){/*tag x float*/ \
		tag_t _x;double _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==1){/*char x tag*/ \
		char _x;tag_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==2){/*char x char*/ \
		char _x;char _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==3){/*char x byte*/ \
		char _x;int8_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==4){/*char x int*/ \
		char _x;int _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==5){/*char x long*/ \
		char _x;__int64_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==6){/*char x octo*/ \
		char _x;__int128_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==7){/*char x float*/ \
		char _x;double _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==1){/*byte x tag*/ \
		int8_t _x;tag_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==2){/*byte x char*/ \
		int8_t _x;char _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==3){/*byte x byte*/ \
		int8_t _x;int8_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==4){/*byte x int*/ \
		int8_t _x;int _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==5){/*byte x long*/ \
		int8_t _x;__int64_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==6){/*byte x octo*/ \
		int8_t _x;__int128_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==7){/*byte x float*/ \
		int8_t _x;double _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==1){/*int x tag*/ \
		int _x;tag_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==2){/*int x char*/ \
		int _x;char _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==3){/*int x byte*/ \
		int _x;int8_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==4){/*int x int*/ \
		int _x;int _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==5){/*int x long*/ \
		int _x;__int64_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==6){/*int x octo*/ \
		int _x;__int128_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==7){/*int x float*/ \
		int _x;double _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==1){/*long x tag*/ \
		__int64_t _x;tag_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==2){/*long x char*/ \
		__int64_t _x;char _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==3){/*long x byte*/ \
		__int64_t _x;int8_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==4){/*long x int*/ \
		__int64_t _x;int _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==5){/*long x long*/ \
		__int64_t _x;__int64_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==6){/*long x octo*/ \
		__int64_t _x;__int128_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==7){/*long x float*/ \
		__int64_t _x;double _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==1){/*octo x tag*/ \
		__int128_t _x;tag_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==2){/*octo x char*/ \
		__int128_t _x;char _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==3){/*octo x byte*/ \
		__int128_t _x;int8_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==4){/*octo x int*/ \
		__int128_t _x;int _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==5){/*octo x long*/ \
		__int128_t _x;__int64_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==6){/*octo x octo*/ \
		__int128_t _x;__int128_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==7){/*octo x float*/ \
		__int128_t _x;double _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==1){/*float x tag*/ \
		double _x;tag_t _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==2){/*float x char*/ \
		double _x;char _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==3){/*float x byte*/ \
		double _x;int8_t _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==4){/*float x int*/ \
		double _x;int _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==5){/*float x long*/ \
		double _x;__int64_t _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==6){/*float x octo*/ \
		double _x;__int128_t _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==7&&_yt==7){/*float x float*/ \
		double _x;double _y; _x=AS_f(x,0);\
		while (_j < _yn) { _y=AS_f(y,_j); stmt; _j++; }\
	}\
})
#define VARY_EACHRIGHT_NOFLOAT(x,y,stmt,failvar) ({ \
	int _i=0,_j=0,_xn=x->n,_yn=y->n,_xt=x->t,_yt=y->t;\
	if(_xt==0||_yt==0){/*cant vary list*/ failvar=0; }\
	if(_xt==7||_yt==7){/*cant vary float*/ failvar=7; }\
	if(_xt==8||_yt==8){/*cant vary dict*/ failvar=8; }\
	if(_xt==9||_yt==9){/*cant vary f1*/ failvar=9; }\
	if(_xt==10||_yt==10){/*cant vary f2*/ failvar=10; }\
	if(_xt==11||_yt==11){/*cant vary proj*/ failvar=11; }\
	if(_xt==12||_yt==12){/*cant vary ctx*/ failvar=12; }\
	if(_xt==1&&_yt==1){/*tag x tag*/ \
		tag_t _x;tag_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==2){/*tag x char*/ \
		tag_t _x;char _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==3){/*tag x byte*/ \
		tag_t _x;int8_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==4){/*tag x int*/ \
		tag_t _x;int _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==5){/*tag x long*/ \
		tag_t _x;__int64_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==1&&_yt==6){/*tag x octo*/ \
		tag_t _x;__int128_t _y; _x=AS_t(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==1){/*char x tag*/ \
		char _x;tag_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==2){/*char x char*/ \
		char _x;char _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==3){/*char x byte*/ \
		char _x;int8_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==4){/*char x int*/ \
		char _x;int _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==5){/*char x long*/ \
		char _x;__int64_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==2&&_yt==6){/*char x octo*/ \
		char _x;__int128_t _y; _x=AS_c(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==1){/*byte x tag*/ \
		int8_t _x;tag_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==2){/*byte x char*/ \
		int8_t _x;char _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==3){/*byte x byte*/ \
		int8_t _x;int8_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==4){/*byte x int*/ \
		int8_t _x;int _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==5){/*byte x long*/ \
		int8_t _x;__int64_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==3&&_yt==6){/*byte x octo*/ \
		int8_t _x;__int128_t _y; _x=AS_b(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==1){/*int x tag*/ \
		int _x;tag_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==2){/*int x char*/ \
		int _x;char _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==3){/*int x byte*/ \
		int _x;int8_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==4){/*int x int*/ \
		int _x;int _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==5){/*int x long*/ \
		int _x;__int64_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==4&&_yt==6){/*int x octo*/ \
		int _x;__int128_t _y; _x=AS_i(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==1){/*long x tag*/ \
		__int64_t _x;tag_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==2){/*long x char*/ \
		__int64_t _x;char _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==3){/*long x byte*/ \
		__int64_t _x;int8_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==4){/*long x int*/ \
		__int64_t _x;int _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==5){/*long x long*/ \
		__int64_t _x;__int64_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==5&&_yt==6){/*long x octo*/ \
		__int64_t _x;__int128_t _y; _x=AS_j(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==1){/*octo x tag*/ \
		__int128_t _x;tag_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_t(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==2){/*octo x char*/ \
		__int128_t _x;char _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_c(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==3){/*octo x byte*/ \
		__int128_t _x;int8_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_b(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==4){/*octo x int*/ \
		__int128_t _x;int _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_i(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==5){/*octo x long*/ \
		__int128_t _x;__int64_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_j(y,_j); stmt; _j++; }\
	}\
	if(_xt==6&&_yt==6){/*octo x octo*/ \
		__int128_t _x;__int128_t _y; _x=AS_o(x,0);\
		while (_j < _yn) { _y=AS_o(y,_j); stmt; _j++; }\
	}\
})
